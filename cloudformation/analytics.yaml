AWSTemplateFormatVersion: '2010-09-09'
Description: Analytics stack for AWS Data Lake project with environment separation 

Parameters:
  Environment:
    Type: String
    Description: Deployment environment (e.g., dev, prod)
    AllowedValues:
      - dev
      - prod
    Default: dev

Resources:
  AthenaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'AthenaExecutionRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'athena.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'AthenaS3AccessPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:ListBucket'
                Resource: 
                  - !Sub 'arn:aws:s3:::athena-query-results-${AWS::AccountId}-${AWS::Region}-${Environment}'
                  - !Sub 'arn:aws:s3:::athena-query-results-${AWS::AccountId}-${AWS::Region}-${Environment}/*'
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'

  AthenaWorkGroup:
    Type: 'AWS::Athena::WorkGroup'
    Properties:
      Name: !Sub 'data-lake-workgroup-${Environment}'
      Description: Workgroup for Data Lake project
      State: ENABLED
      WorkGroupConfiguration:
        ResultConfiguration:
          OutputLocation: !Sub 's3://athena-query-results-${AWS::AccountId}-${AWS::Region}-${Environment}'
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: true

  OrdersTable:
    Type: 'AWS::Glue::Table'
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Sub 'ecommerce_db_${Environment}'
      TableInput:
        Name: orders
        StorageDescriptor:
          Columns:
            - Name: order_id
              Type: string
            - Name: customer_id
              Type: string
            - Name: product_id
              Type: string
            - Name: quantity
              Type: int
            - Name: price
              Type: double
            - Name: order_date
              Type: timestamp
            - Name: ingestion_date
              Type: timestamp
          Location: !Sub 's3://ecommerce-data-lake-${AWS::AccountId}-${AWS::Region}-${Environment}/orders/'
          InputFormat: 'org.apache.hadoop.mapred.TextInputFormat'
          OutputFormat: 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: order_date
            Type: timestamp

  CustomersTable:
    Type: 'AWS::Glue::Table'
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Sub 'ecommerce_db_${Environment}'
      TableInput:
        Name: customers
        StorageDescriptor:
          Columns:
            - Name: customer_id
              Type: string
            - Name: first_name
              Type: string
            - Name: last_name
              Type: string
            - Name: email
              Type: string
            - Name: phone_number
              Type: string
            - Name: created_date
              Type: timestamp
            - Name: ingestion_date
              Type: timestamp
          Location: !Sub 's3://ecommerce-data-lake-${AWS::AccountId}-${AWS::Region}-${Environment}/customers/'
          InputFormat: 'org.apache.hadoop.mapred.TextInputFormat'
          OutputFormat: 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: created_date
            Type: timestamp

  ProductsTable:
    Type: 'AWS::Glue::Table'
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Sub 'ecommerce_db_${Environment}'
      TableInput:
        Name: products
        StorageDescriptor:
          Columns:
            - Name: product_id
              Type: string
            - Name: product_name
              Type: string
            - Name: category
              Type: string
            - Name: price
              Type: double
            - Name: created_date
              Type: timestamp
            - Name: ingestion_date
              Type: timestamp
          Location: !Sub 's3://ecommerce-data-lake-${AWS::AccountId}-${AWS::Region}-${Environment}/products/'
          InputFormat: 'org.apache.hadoop.mapred.TextInputFormat'
          OutputFormat: 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: created_date
            Type: timestamp
